package com.zuct.db.zuct_db.entity.base;

/**
 * 
 * 
  _____                      _              _ _ _     _   _     _        __ _ _      
 |  __ \                    | |            | (_) |   | | | |   (_)      / _(_) |     
 | |  | | ___    _ __   ___ | |_    ___  __| |_| |_  | |_| |__  _ ___  | |_ _| | ___ 
 | |  | |/ _ \  | '_ \ / _ \| __|  / _ \/ _` | | __| | __| '_ \| / __| |  _| | |/ _ \
 | |__| | (_) | | | | | (_) | |_  |  __/ (_| | | |_  | |_| | | | \__ \ | | | | |  __/
 |_____/ \___/  |_| |_|\___/ \__|  \___|\__,_|_|\__|  \__|_| |_|_|___/ |_| |_|_|\___|
 
                                                                                   
 * DO NOT EDIT THIS FILE!! 
 *
 *  FOR CUSTOMIZE LecturersBase PLEASE EDIT ../Lecturers.java
 * 
 *  -- THIS FILE WILL BE OVERWRITTEN ON THE NEXT SKAFFOLDER CODE GENERATION --
 * 
 */
 

/**
 * This is the model of Lecturers object
 * 
 */

import javax.persistence.GeneratedValue;
import javax.persistence.MappedSuperclass;
import javax.persistence.Id;
import javax.persistence.Column;
import java.util.Date;
import javax.persistence.ManyToOne;
import javax.persistence.ManyToMany;
import javax.persistence.OneToMany;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import java.util.ArrayList;
import java.util.List;
import javax.persistence.FetchType;
import java.util.stream.Collectors;

import com.zuct.db.zuct_db.entity.Lecturers;
// Import relations
import com.zuct.db.zuct_db.entity.Programs;


import com.zuct.db.zuct_db.entity.Courses;


import com.zuct.db.zuct_db.entity.Students;




@MappedSuperclass
public class LecturersBase {
	
	@Id
	@GeneratedValue
	private Long _id;
	
	// Attributes
	@Column(nullable=false)
    private String l_first_name;
	@Column(nullable=false)
    private String l_gender;
	@Column(nullable=false)
    private String l_last_name;
	@Column()
    private String l_middle_name;
	@Column()
    private Double l_phone;
	
	// Relations _contain
	@ManyToOne(fetch = FetchType.LAZY)
	private Programs _contain;
	
	// Relations courses
	@OneToMany(mappedBy="_teaches")
	private List<Courses> _teaches_courses = new ArrayList<>();
	
	@ManyToMany(mappedBy="_taught")
	private List<Students> studentss = new ArrayList<>();
	
	
	public Long get_id() {
		return _id;
	}

	public void set_id(Long id) {
		this._id = id;
	}
	
	public String getL_first_name() {
		return l_first_name;
	}

	public void setL_first_name(String l_first_name) {
		this.l_first_name = l_first_name;
	}
	public String getL_gender() {
		return l_gender;
	}

	public void setL_gender(String l_gender) {
		this.l_gender = l_gender;
	}
	public String getL_last_name() {
		return l_last_name;
	}

	public void setL_last_name(String l_last_name) {
		this.l_last_name = l_last_name;
	}
	public String getL_middle_name() {
		return l_middle_name;
	}

	public void setL_middle_name(String l_middle_name) {
		this.l_middle_name = l_middle_name;
	}
	public Double getL_phone() {
		return l_phone;
	}

	public void setL_phone(Double l_phone) {
		this.l_phone = l_phone;
	}
    
	public void setPrograms(String _contain) {
		this._contain = new Programs(_contain);
	}

	public Programs get_contain() {
		return _contain;
	}
	
	// Relations courses
	
	public List<Courses> getCourses() {
		return this._teaches_courses;
	}

	public void addCourses(Courses courses) {
		this._teaches_courses.add(courses);
	}

	public void removeCourses(Courses courses) {
		this._teaches_courses.remove(courses);
	}
	

    
	// Relations students

	public List<Students> getStudents() {
		return this.studentss;
	}

	public void addStudents(Students students) {
		this.studentss.add(students);
	}

	public void removeStudents(Students students) {
		this.studentss.remove(students);
	}
	
}